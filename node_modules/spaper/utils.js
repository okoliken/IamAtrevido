import * as transition from 'svelte/transition';
const propToClass = {
    size: (pf, val) => `${pf}-${val}`,
    block: (pf, _val) => `${pf}-block`,
    type: (pf, val) => `${pf}-${val}`,
    outline: (pf, val) => `${pf}-${val}-outline`,
};
function omit(obj, properties) {
    return Object.fromEntries(Object.entries(obj)
        .filter(([key, _val]) => !properties.includes(key)));
}
export function computeClasses(elPrefix, props) {
    return Object.entries(props)
        .filter(([_prop, val]) => val)
        .map(([prop, val]) => propToClass[prop](elPrefix, val))
        .join(' ');
}
;
export function getDomAttributes({ props, classes, toOmit = [] }) {
    return {
        ...omit(props, toOmit), class: classes
    };
}
export function configureTransition(node, { name, disabled }) {
    if (disabled
        || window.matchMedia('(prefers-reduced-motion: reduce)').matches) {
        return;
    }
    return transition[name](node);
}
