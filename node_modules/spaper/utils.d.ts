import type { Attributes } from './types';
interface getDomAttributesParams {
    props: Attributes;
    classes: string;
    toOmit?: string[];
}
export declare function computeClasses(elPrefix: string, props: Record<string, any>): string;
export declare function getDomAttributes({ props, classes, toOmit }: getDomAttributesParams): Attributes;
export declare type ComponentProps<T extends {
    $set: (...args: any) => any;
}> = NonNullable<Parameters<T['$set']>[0]>;
export declare function configureTransition(node: any, { name, disabled }: {
    name: any;
    disabled: any;
}): any;
export {};
